generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model devotees {
  id                           Int              @id @default(autoincrement()) @db.UnsignedInt
  name                         String?          @db.VarChar(100)
  diksha_name                  String?          @db.VarChar(100)
  status                       devotees_status
  phone                        String?          @unique(map: "phone") @db.VarChar(21)
  phone_verified               Boolean          @default(false)
  phone_whatsapp               String?          @db.VarChar(21)
  email                        String?          @unique(map: "email") @db.VarChar(255)
  email_verified               Boolean          @default(false)
  role_id                      Int              @db.UnsignedTinyInt
  spiritual_level              Int              @db.UnsignedTinyInt
  source                       String           @db.VarChar(40)
  gender                       devotees_gender?
  dob                          DateTime?        @db.Date
  occupation                   String?          @db.VarChar(21)
  occupation_position          String?          @db.VarChar(51)
  spouse_name                  String?          @db.VarChar(100)
  spouse_dob                   DateTime?        @db.Date
  spouse_marriage_anniversary  DateTime?        @db.Date
  parents_father_name          String?          @db.VarChar(100)
  parents_father_dob           DateTime?        @db.Date
  parents_mother_name          String?          @db.VarChar(100)
  parents_mother_dob           DateTime?        @db.Date
  parents_marriage_anniversary DateTime?        @db.Date
  children_1_name              String?          @db.VarChar(100)
  children_1_dob               DateTime?        @db.Date
  children_2_name              String?          @db.VarChar(100)
  children_2_dob               DateTime?        @db.Date
  children_3_name              String?          @db.VarChar(100)
  children_3_dob               DateTime?        @db.Date
  children_4_name              String?          @db.VarChar(100)
  children_4_dob               DateTime?        @db.Date
  internal_note                String?          @db.Text
  created_at                   DateTime         @default(now()) @db.Timestamp(0)
  updated_at                   DateTime         @default(now()) @db.Timestamp(0)
  system_roles                 system_roles     @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_1")
  spiritual_levels             spiritual_levels @relation(fields: [spiritual_level], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_2")

  @@index([role_id], map: "fk_1")
  @@index([spiritual_level], map: "fk_2")
}

model system_roles {
  id              Int        @id @default(autoincrement()) @db.UnsignedTinyInt
  name            String     @db.VarChar(20)
  hierarchy_level Int        @unique(map: "hierarchy_level") @db.UnsignedTinyInt
  description     String?    @db.Text
  created_at      DateTime   @default(now()) @db.Timestamp(0)
  updated_at      DateTime   @default(now()) @db.Timestamp(0)
  devotees        devotees[]
}

model spiritual_levels {
  id              Int        @id @default(autoincrement()) @db.UnsignedTinyInt
  title_male      String     @db.VarChar(20)
  title_female    String     @db.VarChar(20)
  title_other     String?    @db.VarChar(20)
  hierarchy_level Int        @unique(map: "hierarchy_level") @db.UnsignedTinyInt
  description     String?    @db.Text
  created_at      DateTime   @default(now()) @db.Timestamp(0)
  updated_at      DateTime   @default(now()) @db.Timestamp(0)
  devotees        devotees[]
}

enum devotees_status {
  active
  inactive
}

enum devotees_gender {
  male
  female
  other
}
