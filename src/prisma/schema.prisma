generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model devotees {
  id                                              Int              @id @default(autoincrement())
  name                                            String?          @db.VarChar(100)
  initiated_name                                  String?          @db.VarChar(100)
  status                                          devotees_status_enum
  phone                                           String?          @unique @db.VarChar(21)
  phone_verified                                  Boolean          @default(false)
  whatsapp_consent                                Boolean          @default(false)
  phone_whatsapp                                  String?          @db.VarChar(21)
  email                                           String?          @unique @db.VarChar(255)
  email_verified                                  Boolean          @default(false)
  role_id                                         Int              @db.SmallInt
  spiritual_level                                 Int              @db.SmallInt
  source                                          String           @db.VarChar(100)
  referred_by                                     Int?
  counsellor_id                                   Int?
  gender                                          devotees_gender_enum?
  dob                                             DateTime?        @db.Date
  occupation                                      String?          @db.VarChar(21)
  occupation_position                             String?          @db.VarChar(100)
  tax_80g_required                                Boolean          @default(false)
  tax_pan                                         String?          @db.VarChar(10)
  skills                                          Json?            @db.Json
  temple_memberships                              Json?            @db.Json
  class_memberships                               Json?            @db.Json
  address_line1                                   String?          @db.VarChar(255)
  address_line2                                   String?          @db.VarChar(255)
  address_society                                 String?          @db.VarChar(255)
  address_area                                    String?          @db.VarChar(255)
  address_gmap_url                                String?
  address_city                                    String?          @db.VarChar(100)
  address_state                                   String?          @db.VarChar(100)
  address_pincode                                 String?          @db.VarChar(20)
  address_country                                 String?          @db.VarChar(100)
  language_preference                             String?          @db.VarChar(21)
  marital_status                                  Boolean          @default(false)
  spouse_name                                     String?          @db.VarChar(100)
  spouse_dob                                      DateTime?        @db.Date
  spouse_marriage_anniversary                     DateTime?        @db.Date
  parents_father_name                             String?          @db.VarChar(100)
  parents_father_dob                              DateTime?        @db.Date
  parents_mother_name                             String?          @db.VarChar(100)
  parents_mother_dob                              DateTime?        @db.Date
  parents_marriage_anniversary                    DateTime?        @db.Date
  children_1_name                                 String?          @db.VarChar(100)
  children_1_dob                                  DateTime?        @db.Date
  children_2_name                                 String?          @db.VarChar(100)
  children_2_dob                                  DateTime?        @db.Date
  children_3_name                                 String?          @db.VarChar(100)
  children_3_dob                                  DateTime?        @db.Date
  children_4_name                                 String?          @db.VarChar(100)
  children_4_dob                                  DateTime?        @db.Date
  internal_note                                   String?
  created_at                                      DateTime         @default(now()) @db.Timestamp(6)
  updated_at                                      DateTime         @default(now()) @db.Timestamp(6)
  created_by                                      Int?
  updated_by                                      Int?
  created_by_ref_value                            devotees?        @relation("devotees_created_byTodevotees", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_devotees_devotees_created_byTodevotees    devotees[]       @relation("devotees_created_byTodevotees")
  updated_by_ref_value                            devotees?        @relation("devotees_updated_byTodevotees", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_devotees_devotees_updated_byTodevotees    devotees[]       @relation("devotees_updated_byTodevotees")
  counsellor_id_ref_value                         devotees?        @relation("devotees_counsellor_idTodevotees", fields: [counsellor_id], references: [id], map: "fk_counsellor")
  other_devotees_devotees_counsellor_idTodevotees devotees[]       @relation("devotees_counsellor_idTodevotees")
  referred_by_ref_value                           devotees?        @relation("devotees_referred_byTodevotees", fields: [referred_by], references: [id], map: "fk_counsellor_referred_by")
  other_devotees_devotees_referred_byTodevotees   devotees[]       @relation("devotees_referred_byTodevotees")
  donations_donations_created_byTodevotees        donations[]      @relation("donations_created_byTodevotees")
  donations_donations_updated_byTodevotees        donations[]      @relation("donations_updated_byTodevotees")
  donations_donations_phoneTodevotees             donations[]      @relation("donations_phoneTodevotees")
  system_role_ref_value                           system_roles     @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  spiritual_level_ref_value                       spiritual_levels @relation(fields: [spiritual_level], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model donations {
  id                                      String    @id @db.VarChar(100)
  donation_receipt_number                 String    @db.VarChar(100)
  name                                    String?   @db.VarChar(100)
  phone                                   String?   @db.VarChar(21)
  cost_center                             String?   @db.VarChar(100)
  scheme_name                             String?   @db.VarChar(100)
  payment_mode                            String?   @db.VarChar(20)
  amount                                  Int
  instrument_number                       String?   @db.VarChar(100)
  collected_by                            String?   @db.VarChar(100)
  status                                  String    @default("Not Verified") @db.VarChar(21)
  date                                    DateTime? @default(dbgenerated("CURRENT_DATE")) @db.Date
  internal_note                           String?
  created_at                              DateTime  @default(now()) @db.Timestamp(6)
  updated_at                              DateTime  @default(now()) @db.Timestamp(6)
  created_by                              Int?
  updated_by                              Int?
  created_by_ref_value                    devotees? @relation("donations_created_byTodevotees", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  updated_by_ref_value                    devotees? @relation("donations_updated_byTodevotees", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  phone_ref_value                         devotees? @relation("donations_phoneTodevotees", fields: [phone], references: [phone], onDelete: NoAction, onUpdate: NoAction)
}

model spiritual_levels {
  id              Int        @id @default(autoincrement()) @db.SmallInt
  title_male      String     @db.VarChar(20)
  title_female    String     @db.VarChar(20)
  title_other     String     @db.VarChar(20)
  hierarchy_level Int        @unique @db.SmallInt
  description     String?
  created_at      DateTime   @default(now()) @db.Timestamp(6)
  updated_at      DateTime   @default(now()) @db.Timestamp(6)
  devotees        devotees[]
}

model system_roles {
  id              Int        @id @default(autoincrement()) @db.SmallInt
  name            String     @db.VarChar(20)
  hierarchy_level Int        @unique @db.SmallInt
  description     String?
  created_at      DateTime   @default(now()) @db.Timestamptz(6)
  updated_at      DateTime   @default(now()) @db.Timestamptz(6)
  devotees        devotees[]
}

enum devotees_gender_enum {
  male
  female
  other
}

enum devotees_status_enum {
  active
  inactive
}
