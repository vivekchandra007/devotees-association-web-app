generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model devotees {
  id                                               Int                   @id @default(autoincrement())
  name                                             String?               @db.VarChar(100)
  initiated_name                                   String?               @db.VarChar(100)
  status                                           devotees_status_enum  @default(active)
  phone                                            String?               @unique @db.VarChar(21)
  phone_verified                                   Boolean               @default(false)
  whatsapp_consent                                 Boolean               @default(false)
  phone_whatsapp                                   String?               @db.VarChar(21)
  email                                            String?               @unique @db.VarChar(255)
  email_verified                                   Boolean               @default(false)
  system_role_id                                   Int                   @default(1) @db.SmallInt
  spiritual_level_id                               Int                   @default(1) @db.SmallInt
  source_id                                        Int                   @default(1)
  referred_by_id                                   Int?
  counsellor_id                                    Int?
  gender                                           devotees_gender_enum?
  dob                                              DateTime?             @db.Date
  occupation                                       String?               @db.VarChar(21)
  occupation_position                              String?               @db.VarChar(100)
  tax_80g_required                                 Boolean               @default(false)
  tax_pan                                          String?               @db.VarChar(10)
  skills                                           Json?                 @db.Json
  temple_memberships                               Json?                 @db.Json
  class_memberships                                Json?                 @db.Json
  address_line1                                    String?               @db.VarChar(255)
  address_line2                                    String?               @db.VarChar(255)
  address_society                                  String?               @db.VarChar(255)
  address_area                                     String?               @db.VarChar(255)
  address_gmap_url                                 String?
  address_city                                     String?               @db.VarChar(100)
  address_state                                    String?               @db.VarChar(100)
  address_pincode                                  String?               @db.VarChar(20)
  address_country                                  String?               @db.VarChar(100)
  language_preference                              String?               @db.VarChar(21)
  marital_status                                   Boolean?
  spouse_name                                      String?               @db.VarChar(100)
  spouse_dob                                       DateTime?             @db.Date
  spouse_marriage_anniversary                      DateTime?             @db.Date
  parents_father_name                              String?               @db.VarChar(100)
  parents_father_dob                               DateTime?             @db.Date
  parents_mother_name                              String?               @db.VarChar(100)
  parents_mother_dob                               DateTime?             @db.Date
  parents_marriage_anniversary                     DateTime?             @db.Date
  children_1_name                                  String?               @db.VarChar(100)
  children_1_dob                                   DateTime?             @db.Date
  children_2_name                                  String?               @db.VarChar(100)
  children_2_dob                                   DateTime?             @db.Date
  children_3_name                                  String?               @db.VarChar(100)
  children_3_dob                                   DateTime?             @db.Date
  children_4_name                                  String?               @db.VarChar(100)
  children_4_dob                                   DateTime?             @db.Date
  internal_note                                    String?
  created_at                                       DateTime              @default(now()) @db.Timestamp(6)
  updated_at                                       DateTime              @default(now()) @db.Timestamp(6)
  created_by                                       Int?
  updated_by                                       Int?
  created_by_ref_value                             devotees?             @relation("devotees_created_byTodevotees", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_devotees_devotees_created_byTodevotees     devotees[]            @relation("devotees_created_byTodevotees")
  updated_by_ref_value                             devotees?             @relation("devotees_updated_byTodevotees", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_devotees_devotees_updated_byTodevotees     devotees[]            @relation("devotees_updated_byTodevotees")
  source_id_ref_value                              campaigns             @relation("devotees_source_idTocampaigns", fields: [source_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  spiritual_level_id_ref_value                     spiritual_levels      @relation(fields: [spiritual_level_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  system_role_id_ref_value                         system_roles          @relation(fields: [system_role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  referred_by_id_ref_value                         devotees?             @relation("devotees_referred_by_idTodevotees", fields: [referred_by_id], references: [id], map: "fk_referred_by")
  counsellor_id_ref_value                          devotees?             @relation("devotees_counsellor_idTodevotees", fields: [counsellor_id], references: [id], map: "fk_counsellor")
  other_devotees_devotees_counsellor_idTodevotees  devotees[]            @relation("devotees_counsellor_idTodevotees")
  other_devotees_devotees_referred_by_idTodevotees devotees[]            @relation("devotees_referred_by_idTodevotees")
  campaigns_campaigns_created_byTodevotees         campaigns[]           @relation("campaigns_created_byTodevotees")
  campaigns_campaigns_updated_byTodevotees         campaigns[]           @relation("campaigns_updated_byTodevotees")
  donations_donations_created_byTodevotees         donations[]           @relation("donations_created_byTodevotees")
  donations_donations_updated_byTodevotees         donations[]           @relation("donations_updated_byTodevotees")
  donations_donations_phoneTodevotees              donations[]           @relation("donations_phoneTodevotees")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model donations {
  id                      Int        @id @default(autoincrement())
  donation_receipt_number String?    @unique @db.VarChar(100)
  campaign_id             Int?       @default(2)
  name                    String?    @db.VarChar(100)
  phone                   String?    @db.VarChar(21)
  payment_mode            String?    @db.VarChar(20)
  amount                  Int
  date                    DateTime?  @default(dbgenerated("CURRENT_DATE")) @db.Date
  internal_note           String?
  created_at              DateTime   @default(now()) @db.Timestamp(6)
  updated_at              DateTime   @default(now()) @db.Timestamp(6)
  created_by              Int?
  updated_by              Int?
  campaign_id_ref_value   campaigns? @relation("donations_campaign_idTocampaigns", fields: [campaign_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  phone_ref_value         devotees?  @relation("donations_phoneTodevotees", fields: [phone], references: [phone], onDelete: NoAction, onUpdate: NoAction)
  created_by_ref_value    devotees?  @relation("donations_created_byTodevotees", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  updated_by_ref_value    devotees?  @relation("donations_updated_byTodevotees", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model spiritual_levels {
  id              Int        @id @default(autoincrement()) @db.SmallInt
  title_male      String     @db.VarChar(20)
  title_female    String     @db.VarChar(20)
  title_other     String     @db.VarChar(20)
  hierarchy_level Int        @unique @db.SmallInt
  description     String?
  created_at      DateTime   @default(now()) @db.Timestamp(6)
  updated_at      DateTime   @default(now()) @db.Timestamp(6)
  devotees        devotees[]
}

model system_roles {
  id              Int        @id @default(autoincrement()) @db.SmallInt
  name            String     @db.VarChar(20)
  hierarchy_level Int        @unique @db.SmallInt
  description     String?
  created_at      DateTime   @default(now()) @db.Timestamptz(6)
  updated_at      DateTime   @default(now()) @db.Timestamptz(6)
  devotees        devotees[]
}

model campaigns {
  id                                     Int         @id @default(autoincrement()) @db.SmallInt
  name                                   String      @db.VarChar(40)
  description                            String
  start_at                               DateTime    @default(now()) @db.Timestamp(6)
  end_at                                 DateTime    @default(dbgenerated("(CURRENT_TIMESTAMP + '1 year'::interval)")) @db.Timestamp(6)
  created_at                             DateTime    @default(now()) @db.Timestamp(6)
  updated_at                             DateTime    @default(now()) @db.Timestamp(6)
  created_by                             Int?
  updated_by                             Int?
  created_by_ref_value                   devotees?   @relation("campaigns_created_byTodevotees", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  updated_by_ref_value                   devotees?   @relation("campaigns_updated_byTodevotees", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  devotees_devotees_source_idTocampaigns devotees[]  @relation("devotees_source_idTocampaigns")
  donations_campaign_idTocampaigns       donations[] @relation("donations_campaign_idTocampaigns")
}

enum devotees_gender_enum {
  male
  female
  other
}

enum devotees_status_enum {
  active
  inactive
  deceased
}